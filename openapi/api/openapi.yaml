openapi: "3.0.3"
info:
  version: "0.0.1"
  title: "demo api"
  description: "RESTful API implementation"
servers:
  - url: "/v1"
tags:
  - name: "users"
    description: "Access to Users"
paths:
  /user/{userId}:
    get:
      description: "ユーザーの情報を取得する"
      operationId: getUserById
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        "200":
          description: "200(OK)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: "400(Bad Request Error)"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        "500":
          description: "500(Internal Server Error)"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /user/list:
    get:
      description: "全てのユーザーの情報を取得する"
      operationId: getAllUsers
      tags:
        - users
      responses:
        "200":
          description: "200(OK)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
        "500":
          description: "500(Internal Server Error)"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'

components:
  parameters:
    userId:
      name: userId
      in: path
      description: user id
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    AllUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "ユーザーID"
          example: 1
        name:
          type: string
          description: "名前"
          example: "taro"
        age:
          type: integer
          format: int64
          description: "年齢"
          example: 31
          minimum: 0
        gender:
          type: string
          description: "性別(1: 男性, 2:女性, 3:不詳)"
          example: "1"
    InternalServerErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/InternalServerError'
    InternalServerError:
      type: object
      properties:
        type:
          type: string
          description: "500 error"
          example: internal_server_error
        message:
          type: string
          description: "500 error message"
          example: "internal server error"
    BadRequestErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/BadRequestError'
    BadRequestError:
      type: object
      properties:
        type:
          type: string
          description: "400 error"
          example: invalid_parameter
        message:
          type: string
          description: "400 error message"
          example: "invalid parameter error"
        details:
          $ref: '#/components/schemas/FieldError'
    FieldError:
      type: object
      properties:
        field_name:
          type: string
          description: "invalid field name"
        given_value:
          type: string
          description: "invalid field value"
        message:
          type: string
          description: "invalid field message"
